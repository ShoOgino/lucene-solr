/* ====================================================================
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2001 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Apache" and "Apache Software Foundation" and
 *    "Apache Lucene" must not be used to endorse or promote products
 *    derived from this software without prior written permission. For
 *    written permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache",
 *    "Apache Lucene", nor may "Apache" appear in their name, without
 *    prior written permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation.  For more
 * information on the Apache Software Foundation, please see
 * <http://www.apache.org/>.
 */

package de.lanlab.larm.util;


import java.net.URL;
import java.util.HashMap;
import java.util.Date;
import java.util.Set;
import de.lanlab.larm.fetcher.URLMessage;
import de.lanlab.larm.net.HostManager;
import de.lanlab.larm.net.*;

/**
 *  a web document of whatever type. generated by a fetcher task
 */
public class WebDocument extends URLMessage
{
    protected String mimeType;
    // protected byte[] document;
    protected int resultCode;
    protected int size;
    protected String title;
    protected Date lastModified;
    HashMap fields;
    boolean isModified;

    public WebDocument(URLMessage msg)
    {
        super(msg);
        this.mimeType = "";
        this.resultCode = -1;
        this.size = -1;
        this.title = "";
        this.lastModified = new Date();
        clearFields();
        this.isModified = true;
    }

    public  WebDocument(URL url, String mimeType, int resultCode, URL referer, int size, String title, Date lastModified, HostResolver hm)
    {
        super(url, referer, URLMessage.LINKTYPE_ANCHOR, null, hm);
        this.url = url;
        this.mimeType = mimeType;
        //this.document = document;
        this.resultCode = resultCode;
        this.size = size;
        this.title = title;
        this.lastModified = lastModified;
        clearFields();
        this.isModified = true;
    }

    public void setModified(boolean modified)
    {
        this.isModified = modified;
    }

    public boolean isModified()
    {
        return isModified;
    }

    public void clearFields()
    {
        this.fields = new HashMap(7);
    }

    public Set getFieldNames()
    {
        return fields.keySet();
    }

    public Object getField(String name)
    {
        return fields.get(name);
    }

    public void addField(String name, Object value)
    {
        fields.put(name, value);
    }

    public void removeField(String name)
    {
        fields.remove(name);
    }

    public int getNumFields()
    {
        return fields.size();
    }


    public Date getLastModified()
    {
        return lastModified;
    }

    public void setLastModified(Date lastModified)
    {
        this.lastModified = lastModified;
    }

    public String getTitle()
    {
        return title;
    }

    public URL getUrl()
    {
        return url;
    }

    public int getSize()
    {
        return this.size;
    }

    public void setSize(int size)
    {
        this.size = size;
    }

/*
    public void setDocument(byte[] document)
    {
        this.document = document;
    }
*/

    public int getResultCode()
    {
        return resultCode;
    }

    public void setResultCode(int resultCode)
    {
        this.resultCode = resultCode;
    }

/*
    public byte[] getDocumentBytes()
    {
        return this.document;
    }
*/

    public void setUrl(URL url)
    {
        this.url = url;
    }

    public void setMimeType(String mimeType)
    {
        this.mimeType = mimeType;
    }

    public void setTitle(String title)
    {
        this.title = title;
    }


    public String getMimeType()
    {
        return mimeType;
    }

    public String getInfo()
    {
        return super.getInfo() + "\t" +
        this.resultCode + "\t" +
        this.mimeType + "\t" +
        this.size + "\t" +
        "\"" + this.title.replace('\t',' ').replace('\"', (char)0xff ).replace('\n',' ').replace('\r',' ') + "\"\t" + (this.lastModified != null ? java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.SHORT, java.text.DateFormat.SHORT).format(this.lastModified) : "");
    }


}
